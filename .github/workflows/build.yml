# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build the Vue.js Web App
        run: |
          cd $GITHUB_WORKSPACE/web
          npm install
          npm run build
          
      - name: Install python scraper packages
        run: |
          cd $GITHUB_WORKSPACE/scraper
          pip install -r requirements.txt
      
      
      - name: Install flask api packages
        run: |
          cd $GITHUB_WORKSPACE/api
          pip install -r requirements.txt
    
      - name: Rsync to server
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -rltvz0 --delete
          path: .
          remote_path: /data/tca
          remote_host: ${{ secrets.IP_ADDRESS }}
          remote_user: ${{ secrets.USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }} 
      - name: SSH into server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} 
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }} 
          SSH_USERNAME: ${{ secrets.USERNAME }}
          SERVER_IP: ${{ secrets.IP_ADDRESS }}
        run: |
          mkdir ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa $SERVER_IP >> ~/.ssh/known_hosts
          ssh $SSH_USERNAME@$SERVER_IP /bin/bash <<'EOT'
          cp /home/github/.env /data/tca/web/.env
          cp /home/github/vue.config.js /data/tca/web/vue.config.js 
          cd /data/tca
          docker-compose -f docker-compose.production.yml up -d
          EOT
